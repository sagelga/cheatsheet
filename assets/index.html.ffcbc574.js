import{_ as t,o as e,c as d,e as a}from"../app.b199fa92.mjs";const o={},r=a('<h1 id="lists-of-sql-command" tabindex="-1"><a class="header-anchor" href="#lists-of-sql-command" aria-hidden="true">#</a> Lists of SQL command</h1><p>These are a list of fundamental SQL command to use.<br> If you liked to learn more, go to the cheatsheet that is named the same as the command name.</p><h2 id="retrieving-data" tabindex="-1"><a class="header-anchor" href="#retrieving-data" aria-hidden="true">#</a> Retrieving data</h2><table><thead><tr><th>Query</th><th>Usage</th><th>Requirements</th><th>Optional Modifier</th></tr></thead><tbody><tr><td><strong>SELECT</strong><br>Choosing a column</td><td><code>SELECT [column_name] ...</code></td><td><code>FROM</code></td><td><code>... DISTINCT [column_name]</code><br><code>... AS [new_column_name]</code><br> <code>[group_function] </code></td></tr><tr><td><strong>FROM</strong><br>Choosing a table source</td><td><code>... FROM [table_name]</code></td><td><code>SELECT</code></td><td></td></tr><tr><td><strong>WHERE</strong><br>Choosing with arguments</td><td><code>... WHERE [arguments]</code></td><td><code>SELECT</code> &amp; <code>FROM</code></td><td></td></tr><tr><td><strong>ORDER BY</strong><br>Reordering result with arguments</td><td><code>... ORDER BY [column_name] [ASC / DESC]</code></td><td><code>SELECT</code> &amp; <code>FROM</code></td><td></td></tr></tbody></table><h2 id="manipulating-table-object" tabindex="-1"><a class="header-anchor" href="#manipulating-table-object" aria-hidden="true">#</a> Manipulating table (object)</h2><table><thead><tr><th>Query</th><th>Usage</th></tr></thead><tbody><tr><td><strong>CREATE</strong> TABLE<br>Create a new table from scratch</td><td><code>CREATE TABLE [table_name] ( [constraint] [column_name] [data_type] );</code></td></tr><tr><td><strong>ALTER</strong> TABLE<br>Edit table column attributes</td><td><code>ALTER TABLE [table_Name]</code> +<br> <code>ADD [column_name] [data_type];</code> or<br> <code>ALTER COLUMN [column_name] [data_type];</code> or<br> <code>DROP [column_name] [data_type];</code></td></tr><tr><td><strong>DROP</strong> TABLE<br>Delete the table from existence<br><br><em>similar : <code>DELETE</code></em></td><td><code>DROP TABLE [table_name];</code></td></tr></tbody></table><h2 id="data-grouping" tabindex="-1"><a class="header-anchor" href="#data-grouping" aria-hidden="true">#</a> Data grouping</h2><table><thead><tr><th>Query</th><th>Usage</th><th>Requirements</th><th>Optional Modifier</th></tr></thead><tbody><tr><td><strong>GROUP</strong> BY<br>Choose the group that will do the group function</td><td><code>GROUP BY [column_name]</code></td><td><code>SELECT</code> &amp; <code>FROM</code> &amp; Column functions</td><td><code>HAVING</code></td></tr><tr><td><strong>HAVING</strong><br>Allows GROUP to have some arguments</td><td><code>HAVING [arguments]</code></td><td><code>GROUP</code></td><td></td></tr></tbody></table><h2 id="manipulating-data" tabindex="-1"><a class="header-anchor" href="#manipulating-data" aria-hidden="true">#</a> Manipulating data</h2><table><thead><tr><th>Query</th><th>Usage</th><th>Requirements</th></tr></thead><tbody><tr><td><strong>INSERT</strong> INTO<br>Add new column to table</td><td><code>INSERT INTO [table_name]</code></td><td><code>VALUES [column_values]</code></td></tr><tr><td><strong>UPDATE</strong><br>Edit column attributes</td><td><code>UPDATE [table_name]</code></td><td><code>SET [column_name] = [argument] WHERE[argument]</code></td></tr><tr><td><strong>DELETE</strong> FROM<br>Delete column from the table</td><td><code>DELETE FROM [table_name]</code></td><td><code>WHERE [arguments]</code></td></tr></tbody></table><h2 id="merging-data-table" tabindex="-1"><a class="header-anchor" href="#merging-data-table" aria-hidden="true">#</a> Merging data table</h2><table><thead><tr><th>Query</th><th>Usage</th><th>Requirements</th></tr></thead><tbody><tr><td><strong>INNER JOIN</strong><br>Result will be matched only</td><td><code>INNER JOIN [table_name]</code> or <br><code>JOIN [table_name]</code></td><td><code>... ON [currentTable_column_name] = [targetTable_column_name]</code> or<br><code>... USING [key_column_Name]</code></td></tr><tr><td><strong>OUTER JOIN</strong><br>Result will be matched + some table</td><td><code>LEFT JOIN [table_name]</code> or<br> <code>RIGHT JOIN [table_name]</code> or<br> <code>FULL JOIN [table_name]</code></td><td><code>... ON [currentTable_column_name] = [targetTable_column_name]</code> or<br><code>... USING [key_column_Name]</code></td></tr><tr><td><strong>NATURAL JOIN</strong><br>Automatic finding of merging key<br><br><em>similar : <code>EQUI JOIN</code></em></td><td><code>NATURAL JOIN [table_name]</code></td><td><code>... ON [currentTable_column_name] = [targetTable_column_name]</code> or<br><code>... USING [key_column_Name]</code></td></tr></tbody></table><h2 id="additional-table-controls" tabindex="-1"><a class="header-anchor" href="#additional-table-controls" aria-hidden="true">#</a> Additional table controls</h2><table><thead><tr><th>Query</th><th>Usage</th></tr></thead><tbody><tr><td><strong>RENAME</strong><br>Rename a table name</td><td><code>RENAME [table_name] [new_table_name]</code></td></tr><tr><td><strong>SET INTEGRITY</strong><br>Set Foreign Key Integrity Rule</td><td><code>SET FOREIGN_KEY_CHECKS = [true / false]</code></td></tr></tbody></table><h2 id="transaction-control" tabindex="-1"><a class="header-anchor" href="#transaction-control" aria-hidden="true">#</a> Transaction control</h2><table><thead><tr><th>Query</th><th>Usage</th></tr></thead><tbody><tr><td><strong>COMMIT</strong><br>Commit all transactions created from last checkpoint</td><td><code>COMMIT</code></td></tr><tr><td><strong>ROLLBACK</strong><br>Revert all transactions to last checkpoint</td><td><code>ROLLBACK [checkpoint_name]</code></td></tr><tr><td><strong>SAVEPOINT</strong><br>Create a new checkpoint</td><td><code>SAVEPOINT [new_savepoint_name]</code></td></tr></tbody></table>',16),n=[r];function c(l,s){return e(),d("div",null,n)}const i=t(o,[["render",c],["__file","index.html.vue"]]);export{i as default};
