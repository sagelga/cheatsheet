import{_ as n,o as s,c as e,e as a}from"../app.b199fa92.mjs";const t={},i=a(`<h1 id="pass" tabindex="-1"><a class="header-anchor" href="#pass" aria-hidden="true">#</a> pass</h1><p>pass is a null statement in Python. Nothing happens when it is executed. It is used as a placeholder.</p><p>Suppose we have a function that is not implemented yet, but we want to implement it in the future. Simply writing,</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>in the middle of a program will give us IndentationError. Instead of this, we construct a blank body with the pass statement.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">function</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>We can do the same thing in an empty class as well.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">example</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,8),p=[i];function o(c,l){return s(),e("div",null,p)}const r=n(t,[["render",o],["__file","index.html.vue"]]);export{r as default};
