import{_ as t,o as e,c as p,a as n,d as o,b as s,e as i,r as l}from"../app.b199fa92.mjs";const c={},u=n("h1",{id:"\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19-built-in",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19-built-in","aria-hidden":"true"},"#"),s(" \u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E19 Built-in")],-1),r=s("In Python, we have a function that calculate the product built-in to python. "),d=n("br",null,null,-1),m=s(" See it all here : "),k={href:"https://docs.python.org/3/library/functions.html",target:"_blank",rel:"noopener noreferrer"},b=s("https://docs.python.org/3/library/functions.html"),v=i(`<p>\u0E01\u0E32\u0E23\u0E17\u0E35\u0E48\u0E08\u0E30\u0E15\u0E31\u0E49\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E19\u0E31\u0E49\u0E19\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E15\u0E31\u0E49\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E2D\u0E30\u0E44\u0E23\u0E01\u0E47\u0E44\u0E14\u0E49\u0E19\u0E30\u0E04\u0E23\u0E31\u0E1A \u0E42\u0E14\u0E22\u0E0A\u0E37\u0E48\u0E2D\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48 Python \u0E08\u0E2D\u0E07\u0E44\u0E27\u0E49\u0E44\u0E21\u0E48\u0E43\u0E2B\u0E49\u0E15\u0E31\u0E49\u0E07\u0E0A\u0E37\u0E48\u0E2D\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19 \u0E08\u0E30\u0E21\u0E35\u0E14\u0E31\u0E07\u0E19\u0E35\u0E49\u0E04\u0E23\u0E31\u0E1A</p><p>\u0E41\u0E25\u0E30\u0E40\u0E0A\u0E48\u0E19\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19 \u0E40\u0E23\u0E32\u0E01\u0E47\u0E2A\u0E32\u0E21\u0E32\u0E23\u0E16\u0E43\u0E0A\u0E49\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48 Python \u0E17\u0E33\u0E44\u0E27\u0E49\u0E41\u0E25\u0E49\u0E27\u0E44\u0E14\u0E49\u0E40\u0E0A\u0E48\u0E19\u0E40\u0E14\u0E35\u0E22\u0E27\u0E01\u0E31\u0E19 \u0E42\u0E14\u0E22\u0E01\u0E32\u0E23\u0E40\u0E23\u0E35\u0E22\u0E01\u0E40\u0E2B\u0E21\u0E37\u0E2D\u0E19\u0E01\u0E31\u0E1A\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E18\u0E23\u0E23\u0E21\u0E14\u0E32\u0E40\u0E25\u0E22</p><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>abs()</td><td>dict()</td><td>help()</td><td>min()</td><td>setattr()</td></tr><tr><td>all()</td><td>dir()</td><td>hex()</td><td>next()</td><td>slice()</td></tr><tr><td>any()</td><td>divmod()</td><td>id()</td><td>object()</td><td>sorted()</td></tr><tr><td>ascii()</td><td>enumerate()</td><td>input()</td><td>oct()</td><td>staticmethod()</td></tr><tr><td>bin()</td><td>eval()</td><td>int()</td><td>open()</td><td>str()</td></tr><tr><td>bool()</td><td>exec()</td><td>isinstance()</td><td>ord()</td><td>sum()</td></tr><tr><td>bytearray()</td><td>filter()</td><td>issubclass()</td><td>pow()</td><td>super()</td></tr><tr><td>bytes()</td><td>float()</td><td>iter()</td><td>print()</td><td>tuple()</td></tr><tr><td>callable()</td><td>format()</td><td>len()</td><td>property()</td><td>type()</td></tr><tr><td>chr()</td><td>frozenset()</td><td>list()</td><td>range()</td><td>vars()</td></tr><tr><td>classmethod()</td><td>getattr()</td><td>locals()</td><td>repr()</td><td>zip()</td></tr><tr><td>compile()</td><td>globals()</td><td>map()</td><td>reversed()</td><td>_<em>import</em>_()</td></tr><tr><td>complex()</td><td>hasattr()</td><td>max()</td><td>round()</td><td></td></tr><tr><td>delattr()</td><td>hash()</td><td>memoryview()</td><td>set()</td><td></td></tr></tbody></table><h3 id="using-abs" tabindex="-1"><a class="header-anchor" href="#using-abs" aria-hidden="true">#</a> Using abs()</h3><p>abs() is absolute in math language. Absoulte will returns a <strong>positive</strong> number from the value</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token comment"># Returns 10</span>
<span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">)</span>    <span class="token comment"># Returns 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-chr" tabindex="-1"><a class="header-anchor" href="#using-chr" aria-hidden="true">#</a> Using chr()</h3><p>chr() converts number (integer only) to ASCII character.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>integer<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">)</span> <span class="token comment"># Returns &#39;A&#39;</span>
<span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span> <span class="token comment"># Returns &#39;a&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-ord" tabindex="-1"><a class="header-anchor" href="#using-ord" aria-hidden="true">#</a> Using ord()</h3><p>ord() converts single ASCII character to number (integer).</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>character<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span> <span class="token comment"># Returns 65</span>
<span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token comment"># Returns 97</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-len" tabindex="-1"><a class="header-anchor" href="#using-len" aria-hidden="true">#</a> Using len()</h3><p>Mostly used with for loops. len is equal to length of something.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>integer<span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>array<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>     <span class="token comment"># Equals to 0 to 9</span>
<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>  <span class="token comment"># Equals to 1 to 10</span>

<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">&quot;Happy&quot;</span><span class="token punctuation">)</span> <span class="token comment"># Returns 5</span>
<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span> <span class="token comment"># Returns 1</span>

<span class="token builtin">len</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># Returns 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-max" tabindex="-1"><a class="header-anchor" href="#using-max" aria-hidden="true">#</a> Using max()</h3><p>Function will return the <strong>largest</strong> number from 2 arguments</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">max</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>arguments_1<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>arguments_2<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># Returns 2</span>

a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span>
<span class="token builtin">max</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token comment"># Returns 20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-min" tabindex="-1"><a class="header-anchor" href="#using-min" aria-hidden="true">#</a> Using min()</h3><p>Function will return the <strong>smallest</strong> number from 2 arguments</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">min</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>arguments_1<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>arguments_2<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># Returns 1</span>

a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">10</span>
<span class="token builtin">min</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token comment"># Returns 10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-pow" tabindex="-1"><a class="header-anchor" href="#using-pow" aria-hidden="true">#</a> Using pow()</h3><p>Caculates a exponential values by using functions. This is absolutely optional way to calculate exponent</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>number<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>exponent power<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>modulo by<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
<span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token comment"># Returns 8</span>
<span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># Returns 0 (as 2**3 % 2)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-round" tabindex="-1"><a class="header-anchor" href="#using-round" aria-hidden="true">#</a> Using round()</h3><p>Returns a number that will be rounded up (if &gt;= .5) or round down (if &lt; .5) <br> If you want to forced round up or round down, You can use math library to help</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">round</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>number<span class="token operator">&gt;</span><span class="token punctuation">,</span> significant number<span class="token punctuation">)</span>

Example
<span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">12.1</span><span class="token punctuation">)</span> <span class="token comment"># Returns 12</span>
<span class="token builtin">round</span><span class="token punctuation">(</span><span class="token number">12.153</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment"># Returns 12.15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-sorted" tabindex="-1"><a class="header-anchor" href="#using-sorted" aria-hidden="true">#</a> Using sorted()</h3><p>Returns a arrays of values that have been sorted, pending on their value types <br> Parameter reverse is when you want to sort in descending order <br> Parameter key is when you want to sort dictionary using only some data to determine</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>How to use
<span class="token builtin">sorted</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>lists of arrays<span class="token operator">&gt;</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> key<span class="token operator">=</span>none<span class="token punctuation">)</span>

Example
text <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span>
<span class="token builtin">sorted</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment"># Returns [1,2,3,4,5,6,7,8,9,10]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="using-chr-float-int" tabindex="-1"><a class="header-anchor" href="#using-chr-float-int" aria-hidden="true">#</a> Using chr() float() int()</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token builtin">float</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span><span class="token punctuation">)</span>
<span class="token builtin">int</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>value<span class="token operator">&gt;</span><span class="token punctuation">)</span>

Example
number <span class="token operator">=</span> <span class="token number">12</span>
<span class="token builtin">chr</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token comment"># Returns &#39;12&#39;</span>

number <span class="token operator">=</span> <span class="token string">&#39;12&#39;</span>
<span class="token builtin">float</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token comment"># Returns 12.0</span>

number <span class="token operator">=</span> <span class="token number">12.55</span>
<span class="token builtin">int</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token comment"># Returns 12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>chr() convert value to string type (if possible) <br> float() convert value to float type (if possible) <br> int() convert value to integer type (if possible)</p>`,33);function h(g,y){const a=l("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[r,d,m,n("a",k,[b,o(a)])]),v])}const f=t(c,[["render",h],["__file","index.html.vue"]]);export{f as default};
