import{_ as n,o as c,c as o,a as e,d as l,e as t,b as a,r as i}from"../app.b199fa92.mjs";const d={},r=t(`<h1 id="select-from" tabindex="-1"><a class="header-anchor" href="#select-from" aria-hidden="true">#</a> SELECT &amp; FROM</h1><p>\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E02\u0E49\u0E32\u0E16\u0E36\u0E07\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E20\u0E32\u0E22\u0E43\u0E19 Database \u0E40\u0E23\u0E32\u0E08\u0E30\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E0A\u0E49\u0E04\u0E33\u0E2A\u0E31\u0E48\u0E07\u0E19\u0E31\u0E48\u0E19\u0E01\u0E47\u0E04\u0E37\u0E2D <code>SELECT</code> \u0E41\u0E25\u0E30 <code>FROM</code> \u0E42\u0E14\u0E22\u0E17\u0E35\u0E48 <code>SELECT</code> \u0E08\u0E30\u0E17\u0E33\u0E2B\u0E19\u0E49\u0E32\u0E17\u0E35\u0E48\u0E40\u0E25\u0E37\u0E2D\u0E01 column \u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E15\u0E32\u0E23\u0E32\u0E07\u0E2D\u0E2D\u0E01\u0E21\u0E32 \u0E41\u0E25\u0E30 <code>FROM</code> \u0E08\u0E30\u0E17\u0E33\u0E2B\u0E19\u0E49\u0E32\u0E17\u0E35\u0E48\u0E40\u0E25\u0E37\u0E2D\u0E01 table \u0E17\u0E35\u0E48\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E02\u0E49\u0E2D\u0E07\u0E43\u0E19\u0E15\u0E32\u0E23\u0E32\u0E07\u0E2D\u0E2D\u0E01\u0E21\u0E32</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">[</span>column_name<span class="token punctuation">]</span>
<span class="token keyword">FROM</span> <span class="token punctuation">[</span>table_name<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u0E40\u0E23\u0E32\u0E04\u0E27\u0E23\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E25\u0E37\u0E2D\u0E01 column \u0E17\u0E35\u0E48\u0E40\u0E23\u0E32\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E40\u0E17\u0E48\u0E32\u0E19\u0E31\u0E49\u0E19\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E33\u0E43\u0E2B\u0E49\u0E01\u0E32\u0E23\u0E43\u0E0A\u0E49\u0E07\u0E32\u0E19\u0E02\u0E2D\u0E07\u0E1C\u0E39\u0E49\u0E43\u0E0A\u0E49\u0E19\u0E31\u0E49\u0E19\u0E40\u0E23\u0E47\u0E27\u0E02\u0E36\u0E49\u0E19</p></div><h3 id="\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14" tabindex="-1"><a class="header-anchor" href="#\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14" aria-hidden="true">#</a> \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E31\u0E49\u0E07\u0E2B\u0E21\u0E14</h3><p>\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E38\u0E01 column \u0E2D\u0E2D\u0E01\u0E21\u0E32 \u0E43\u0E2B\u0E49\u0E43\u0E0A\u0E49 <code>SELECT *</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> Employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>\u0E02\u0E49\u0E2D\u0E14\u0E35: \u0E2B\u0E32\u0E01\u0E27\u0E48\u0E32\u0E21\u0E35\u0E04\u0E19\u0E17\u0E33\u0E01\u0E32\u0E23\u0E25\u0E1A\u0E0A\u0E37\u0E48\u0E2D column \u0E2D\u0E2D\u0E01\u0E44\u0E1B \u0E40\u0E23\u0E32\u0E01\u0E47\u0E08\u0E30\u0E44\u0E21\u0E48\u0E44\u0E14\u0E49\u0E23\u0E31\u0E1A\u0E1C\u0E25\u0E01\u0E23\u0E30\u0E17\u0E1A\u0E2D\u0E30\u0E44\u0E23 \u0E40\u0E1E\u0E23\u0E32\u0E30\u0E01\u0E47\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E17\u0E38\u0E01\u0E2D\u0E31\u0E19\u0E2D\u0E22\u0E39\u0E48\u0E41\u0E25\u0E49\u0E27</p><p>\u0E02\u0E49\u0E2D\u0E40\u0E2A\u0E35\u0E22: \u0E0A\u0E49\u0E32\u0E01\u0E27\u0E48\u0E32\u0E01\u0E32\u0E23\u0E40\u0E23\u0E35\u0E22\u0E01\u0E1A\u0E32\u0E07 column</p></div><h2 id="\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1A\u0E32\u0E07-column-\u0E08\u0E32\u0E01\u0E15\u0E32\u0E23\u0E32\u0E07" tabindex="-1"><a class="header-anchor" href="#\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1A\u0E32\u0E07-column-\u0E08\u0E32\u0E01\u0E15\u0E32\u0E23\u0E32\u0E07" aria-hidden="true">#</a> \u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1A\u0E32\u0E07 Column \u0E08\u0E32\u0E01\u0E15\u0E32\u0E23\u0E32\u0E07</h2><p>\u0E40\u0E1E\u0E37\u0E48\u0E2D\u0E17\u0E35\u0E48\u0E08\u0E30\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E1A\u0E32\u0E07 column \u0E2D\u0E2D\u0E01\u0E21\u0E32 \u0E43\u0E2B\u0E49\u0E40\u0E02\u0E35\u0E22\u0E19\u0E0A\u0E37\u0E48\u0E2D column \u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01 SELECT \u0E41\u0E25\u0E30\u0E15\u0E32\u0E21\u0E14\u0E49\u0E27\u0E22 , \u0E2B\u0E32\u0E01\u0E15\u0E49\u0E2D\u0E07\u0E01\u0E32\u0E23\u0E2B\u0E25\u0E32\u0E22 column</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> first_name<span class="token punctuation">,</span> last_name
<span class="token keyword">FROM</span> Employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="select-distinct-column" tabindex="-1"><a class="header-anchor" href="#select-distinct-column" aria-hidden="true">#</a> Select <code>DISTINCT</code> column</h2><p><code>DISTINCT</code> keyword is used when you want to get a <em>unique</em> values as a output. So the result does not have duplicate values in that selected column(s).</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> salary
<span class="token keyword">FROM</span> Employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>the result will not have duplicates (because using <code>DISTINCT</code> keyword)</p><h3 id="modify-the-result-with-calculations" tabindex="-1"><a class="header-anchor" href="#modify-the-result-with-calculations" aria-hidden="true">#</a> Modify the result with calculations</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> salary<span class="token punctuation">,</span> salary <span class="token operator">*</span> <span class="token number">100</span>
<span class="token keyword">FROM</span> Employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>and that will show the salary column and the column that is a value of the salary times 100.</p><h2 id="change-column-name" tabindex="-1"><a class="header-anchor" href="#change-column-name" aria-hidden="true">#</a> Change column name</h2><h3 id="temporary-change-column-name-with-as" tabindex="-1"><a class="header-anchor" href="#temporary-change-column-name-with-as" aria-hidden="true">#</a> Temporary change column name with <code>AS</code></h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> first_name <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">\`</span>First Name<span class="token punctuation">\`</span></span>
<span class="token keyword">FROM</span> Employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>AS</code> keyword also can be skipped. NOTE : use backslash \` to marked it as a string</p><h3 id="use-concat-to-merge-row-column-value" tabindex="-1"><a class="header-anchor" href="#use-concat-to-merge-row-column-value" aria-hidden="true">#</a> Use <code>CONCAT</code> to merge row-column value</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span> <span class="token string">&#39; is a &#39;</span><span class="token punctuation">,</span> job_id<span class="token punctuation">)</span>
    <span class="token keyword">AS</span> <span class="token identifier"><span class="token punctuation">\`</span>Employee Details<span class="token punctuation">\`</span></span>
<span class="token keyword">FROM</span> Employees<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h4 id="resource" tabindex="-1"><a class="header-anchor" href="#resource" aria-hidden="true">#</a> Resource</h4>`,26),u=a("CodeAcademy "),p={href:"https://www.codecademy.com/courses/learn-sql/lessons/queries/exercises/distinct?action=resume_content_item",target:"_blank",rel:"noopener noreferrer"},m=a("https://www.codecademy.com/courses/learn-sql/lessons/queries/exercises/distinct?action=resume_content_item");function h(v,k){const s=i("ExternalLinkIcon");return c(),o("div",null,[r,e("ul",null,[e("li",null,[u,e("a",p,[m,l(s)])])])])}const g=n(d,[["render",h],["__file","index.html.vue"]]);export{g as default};
