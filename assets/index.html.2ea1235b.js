import{_ as n,o as a,c as s,e}from"../app.b199fa92.mjs";const t={},p=e(`<h1 id="\u0E42\u0E21\u0E14\u0E39\u0E25-math" tabindex="-1"><a class="header-anchor" href="#\u0E42\u0E21\u0E14\u0E39\u0E25-math" aria-hidden="true">#</a> \u0E42\u0E21\u0E14\u0E39\u0E25 Math</h1><p>\u0E2B\u0E25\u0E31\u0E07\u0E08\u0E32\u0E01\u0E19\u0E49\u0E2D\u0E07\u0E46\u0E44\u0E14\u0E49\u0E25\u0E2D\u0E07\u0E40\u0E25\u0E48\u0E19 function \u0E41\u0E1A\u0E1A built-in \u0E01\u0E31\u0E19\u0E44\u0E1B\u0E41\u0E25\u0E49\u0E27<br></p><p>\u0E2A\u0E33\u0E2B\u0E23\u0E31\u0E1A\u0E19\u0E49\u0E2D\u0E07\u0E46\u0E17\u0E35\u0E48\u0E22\u0E31\u0E07\u0E44\u0E21\u0E48\u0E40\u0E02\u0E49\u0E32\u0E43\u0E08\u0E27\u0E48\u0E32 built-in function \u0E04\u0E37\u0E2D\u0E2D\u0E30\u0E44\u0E23 \u0E01\u0E47\u0E43\u0E2B\u0E49\u0E44\u0E1B\u0E40\u0E23\u0E35\u0E22\u0E19 concept \u0E02\u0E2D\u0E07\u0E21\u0E31\u0E19\u0E0B\u0E30\u0E01\u0E48\u0E2D\u0E19\u0E19\u0E30\u0E04\u0E23\u0E31\u0E1A</p><p>\u0E41\u0E15\u0E48\u0E43\u0E19 lecture \u0E19\u0E35\u0E49 \u0E1E\u0E35\u0E48\u0E21\u0E07\u0E01\u0E47\u0E08\u0E30\u0E17\u0E33\u0E01\u0E32\u0E23\u0E2D\u0E18\u0E34\u0E1A\u0E32\u0E22\u0E40\u0E01\u0E35\u0E48\u0E22\u0E27\u0E01\u0E31\u0E1A module <code>math</code> \u0E19\u0E31\u0E48\u0E19\u0E40\u0E2D\u0E07</p><h2 id="\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E04\u0E27\u0E23\u0E23\u0E39\u0E49\u0E44\u0E27\u0E49" tabindex="-1"><a class="header-anchor" href="#\u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E04\u0E27\u0E23\u0E23\u0E39\u0E49\u0E44\u0E27\u0E49" aria-hidden="true">#</a> \u0E1F\u0E31\u0E07\u0E01\u0E4C\u0E0A\u0E31\u0E48\u0E19\u0E17\u0E35\u0E48\u0E04\u0E27\u0E23\u0E23\u0E39\u0E49\u0E44\u0E27\u0E49</h2><p>\u0E40\u0E19\u0E37\u0E48\u0E2D\u0E07\u0E08\u0E32\u0E01\u0E21\u0E31\u0E19\u0E21\u0E35\u0E40\u0E22\u0E2D\u0E30\u0E21\u0E32\u0E01\u0E46\u0E46\u0E46\u0E46\u0E46 \u0E1E\u0E35\u0E48\u0E21\u0E07\u0E01\u0E47\u0E40\u0E25\u0E22\u0E40\u0E25\u0E37\u0E2D\u0E01\u0E2D\u0E31\u0E19\u0E17\u0E35\u0E48\u0E15\u0E49\u0E2D\u0E07\u0E43\u0E0A\u0E49\u0E1A\u0E48\u0E2D\u0E22\u0E46\u0E21\u0E32\u0E41\u0E25\u0E49\u0E27\u0E01\u0E31\u0E19\u0E04\u0E23\u0E31\u0E1A \u0E2D\u0E31\u0E19\u0E2D\u0E37\u0E48\u0E19\u0E46 \u0E19\u0E49\u0E2D\u0E07\u0E2D\u0E32\u0E08\u0E08\u0E30\u0E40\u0E02\u0E49\u0E32\u0E44\u0E1B\u0E14\u0E39\u0E44\u0E14\u0E49\u0E43\u0E19\u0E40\u0E27\u0E47\u0E1A\u0E44\u0E0B\u0E15\u0E4C\u0E02\u0E2D\u0E07 Python.org \u0E04\u0E23\u0E31\u0E1A</p><h3 id="absolute-values" tabindex="-1"><a class="header-anchor" href="#absolute-values" aria-hidden="true">#</a> Absolute Values</h3><p>Make the integer or float becomes positive only.</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>fabs<span class="token punctuation">(</span><span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or use built-in function <code>abs()</code> instead.</p><h3 id="exponent" tabindex="-1"><a class="header-anchor" href="#exponent" aria-hidden="true">#</a> Exponent</h3><p>or use exponent ** sign Returns value as x**y</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span><span class="token builtin">pow</span><span class="token punctuation">(</span><span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>exponent power<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="root-of-n" tabindex="-1"><a class="header-anchor" href="#root-of-n" aria-hidden="true">#</a> Root of n</h3><p>Returns value as x^1/2 (square root)</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">float</span> <span class="token keyword">or</span> integer<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="logarithms" tabindex="-1"><a class="header-anchor" href="#logarithms" aria-hidden="true">#</a> Logarithms</h3><p>Returns the value as log [base] [number]</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>log<span class="token punctuation">(</span><span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>base<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>or use a predefined log level</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>log2<span class="token punctuation">(</span><span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>log10<span class="token punctuation">(</span><span class="token punctuation">[</span>number<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rounding-up" tabindex="-1"><a class="header-anchor" href="#rounding-up" aria-hidden="true">#</a> Rounding Up</h3><p>Returns value as integer (rounding up)</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">float</span> <span class="token keyword">or</span> integer<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="rounding-down" tabindex="-1"><a class="header-anchor" href="#rounding-down" aria-hidden="true">#</a> Rounding Down</h3><p>Returns value as integer (rounding down)</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>floor<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">float</span> <span class="token keyword">or</span> integer<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="factorial" tabindex="-1"><a class="header-anchor" href="#factorial" aria-hidden="true">#</a> Factorial</h3><p>Returns the value of the value factorial</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>factorial<span class="token punctuation">(</span><span class="token punctuation">[</span>integer<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="calculate-gcd" tabindex="-1"><a class="header-anchor" href="#calculate-gcd" aria-hidden="true">#</a> Calculate GCD</h3><p>Returns the GCD of integer A and B</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>gcd<span class="token punctuation">(</span><span class="token punctuation">[</span>integer_a<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>integer_a<span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pi-constant" tabindex="-1"><a class="header-anchor" href="#pi-constant" aria-hidden="true">#</a> Pi Constant</h3><p>Returns the value of pi (more accurate than 22/7, but not for 355/113)</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>pi<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="trigonometric-functions" tabindex="-1"><a class="header-anchor" href="#trigonometric-functions" aria-hidden="true">#</a> Trigonometric Functions</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>

math<span class="token punctuation">.</span>csc<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>sec<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>cot<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>

math<span class="token punctuation">.</span>arcsin<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>arccos<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span>arctan<span class="token punctuation">(</span><span class="token operator">&lt;</span>radians<span class="token operator">&gt;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u0E21\u0E31\u0E19\u0E43\u0E0A\u0E49\u0E2B\u0E19\u0E48\u0E27\u0E22\u0E17\u0E35\u0E48\u0E40\u0E1B\u0E47\u0E19 input \u0E04\u0E37\u0E2D <code>radians</code> \u0E44\u0E21\u0E48\u0E43\u0E0A\u0E48\u0E2B\u0E19\u0E48\u0E27\u0E22 <code>degrees</code> \u0E19\u0E30\u0E04\u0E23\u0E31\u0E1A</p><h3 id="\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19-degrees-radians" tabindex="-1"><a class="header-anchor" href="#\u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19-degrees-radians" aria-hidden="true">#</a> \u0E40\u0E1B\u0E25\u0E35\u0E48\u0E22\u0E19 Degrees -&gt; Radians</h3><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>math<span class="token punctuation">.</span>radians<span class="token punctuation">(</span><span class="token punctuation">[</span>degree<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,41),o=[p];function i(c,u){return a(),s("div",null,o)}const r=n(t,[["render",i],["__file","index.html.vue"]]);export{r as default};
