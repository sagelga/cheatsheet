import{_ as n,o as s,c as a,e}from"../app.b199fa92.mjs";const t={},o=e(`<h1 id="class-object" tabindex="-1"><a class="header-anchor" href="#class-object" aria-hidden="true">#</a> Class &amp; Object</h1><p>In the word <strong>object</strong>, it is like a features in a single item. <br> Like, printer for example. Printers can <code>scan</code> and <code>print</code> and <code>copy</code>. These are called objects <br> and printers is called <strong>class</strong>.</p><p>Class can have many objects. Unlimted is another word.<br> But to use a object and functions inside a object is another part.</p><p>Let&#39;s try creating a new class!</p><h2 id="creating-class" tabindex="-1"><a class="header-anchor" href="#creating-class" aria-hidden="true">#</a> Creating class</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">Kumamon</span><span class="token punctuation">:</span> <span class="token comment"># Class needs AT LEAST 1 self (which equals to class name itself.)</span>
    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># This function is __init__ WHICH IS REQUIRED BY CLASS. It defines all other variable na,e</span>
        self<span class="token punctuation">.</span>name <span class="token operator">=</span> name <span class="token operator">+</span> <span class="token string">&quot; desu&quot;</span> <span class="token comment"># Defining variable name to be equal to itself + desu</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="calling-a-class-variables" tabindex="-1"><a class="header-anchor" href="#calling-a-class-variables" aria-hidden="true">#</a> Calling a class variables</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code>happy <span class="token operator">=</span> Kumamon<span class="token punctuation">(</span><span class="token string">&quot;Uvuvwevwevwe onyetenyevwe ugwemubwem ossas&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">return</span> happy<span class="token punctuation">.</span>name <span class="token comment"># Returns &quot;Uvuvwevwevwe onyetenyevwe ugwemubwem ossas desu&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="example-of-function-defining" tabindex="-1"><a class="header-anchor" href="#example-of-function-defining" aria-hidden="true">#</a> Example of function defining</h2><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">class</span> <span class="token class-name">mango</span><span class="token punctuation">:</span>
    <span class="token keyword">def</span> <span class="token function">func</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        a<span class="token punctuation">,</span> b <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span>
        <span class="token keyword">return</span> a<span class="token operator">+</span>b

    <span class="token keyword">def</span> <span class="token function">func2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>
        c <span class="token operator">=</span> self<span class="token punctuation">.</span>func<span class="token punctuation">(</span><span class="token punctuation">)</span>
        z <span class="token operator">=</span> x <span class="token operator">+</span> y <span class="token operator">+</span> c
        <span class="token keyword">return</span> z

a <span class="token operator">=</span> mango<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>func2<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),c=[o];function p(i,l){return s(),a("div",null,c)}const r=n(t,[["render",p],["__file","index.html.vue"]]);export{r as default};
